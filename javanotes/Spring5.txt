这是我的Java学习笔记！！！

! Spring  是轻量级 非入侵式的框架

控制反转 （ioc）  面向切面编程（AOC）

支持事务的处理 ，对框架整合的支持



Spring Boot
    1.一个快速开发的脚手架
    2.基于springBoot  可以快速开发单个微服务
    3.约定大于配置

Spring Cloud
    Spring Cloud基于Spring Boot实现


SpringBoot前提：需要完全掌握Spring   以及SpringMvc






! IOC 理论推导

    1.UserDao 接口
    2.UserDaoImpl 实现类
    3.UserService 业务接口
    4.UserServiceImpl 业务实现类


修饰符	同包可见性	跨包可见性	导包作用
public	可见	可见	导包后即可直接访问类或成员
protected	可见	仅对子类可见（需继承关系）	导包后，子类可通过继承访问成员
default	可见	不可见	导包无法使其在其他包中可见
private	不可见	不可见	导包无法使其在其他类中可见

注意事项
访问权限优先于导包：导包只提供使用类的能力，但访问权限最终由修饰符决定。
类的修饰符限制导包：
如果类是 default 的，即使成员是 public，其他包也无法导入和使用该类。
如果类是 public 的，但成员是 private 或 protected，其他包可能无法访问这些成员。


(把主动权交给了用户，而不用像传统主动权在程序员中，对于用户需求改动，就要在程序中变动，上述案例用set方法 创建对象)

    private UserDao userDao ;


    public void setUserDao(UserDao userDao) {
        this.userDao = userDao;
    }


tips: 快捷输出 sout  快捷创建main方法 psvm


通过配置appliction.xml 用spring 来管理对象

<!--  使用spring 来创建对象，在spring中都称为bean-->
    <bean id="hello" class="com.kuang.pojo.Hello">
        <property name="name"  value="ThisisSpring"/>
    </bean>

<!--  使用spring 来创建对象，在spring中都称为bean-->
        <bean id="mySqlImpl" class="com.kuang.dao.UserDaoMysqlImpl">

        </bean>
         <bean id ="userServiceImpl" class="com.kuang.service.UserServiceImpl">
    <!--   ！！！！！ref:引用容器中创建好的对象  value:具体的值-->
            <property name="userDao" ref="mySqlImpl"></property>
         </bean>

到现在为止，对象托管在spring 程序员不用更改 ，用户不用更改，更改配置xml即可.
所谓IOC:对象由spring 创建 管理 装配

                tips:先new最后用提示符创建声明 ，先写出要输出的内容最后.sout，查看源码用CTRAL+单击